AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Rest api template

Resources:    
  UrlshortenerApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      Name: s-url-api

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt UrlshortenerApi.RootResourceId
      PathPart: '{shortenurl}'
      RestApiId: !Ref UrlshortenerApi

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
     RestApiId: !Ref UrlshortenerApi
     ResourceId: !Ref ApiGatewayResource
     HttpMethod: GET
     AuthorizationType: NONE
     RequestParameters:
       method.request.querystring.url: true

  ProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref UrlshortenerApi
      ParentId: !GetAtt UrlshortenerApi.RootResourceId
      PathPart: '{proxy+}'

  ProxyGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref UrlshortenerApi
      ResourceId: !Ref ProxyResource
      HttpMethod: GET
      AuthorizationType: NONE  

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref UrlshortenerApi

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      RestApiId: !Ref UrlshortenerApi
      DeploymentId: !Ref ApiGatewayDeployment
      Variables:
        Stack: Prod
      MethodSettings:
        - ResourcePath: /{shortenurl}
          HttpMethod: GET
          MetricsEnabled: true
          DataTraceEnabled: false
        - ResourcePath: /{proxy+}
          HttpMethod: GET
          MetricsEnabled: true
          DataTraceEnabled: false

  ApiGatewayIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: 'ApiGatewayInvokeLambda'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: '*'

  

  LambdaApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "URLShortenerFunction.Arn"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${UrlshortenerApi}/*/*'

Outputs:
  UrlshortenerApi:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${UrlshortenerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  
  ApiGatewayIamRole:
    Description: "IAM Role created for API Gateway"
    Value: !GetAtt ApiGatewayIamRole.Arn

        